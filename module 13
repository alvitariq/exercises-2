#Setting up a backend service with an interface:
#exercises1:
from flask import Flask, request, jsonify
import requests

app = Flask(__name__)

def is_prime(n):
  if n < 2:
    return False
  for i in range(2, int(n**0.5) + 1):
    if n % i == 0:
      return False
  return True

@app.route("/prime_number/<int:n>")
def prime_number(n):
  if not isinstance(n, int) or n < 1:
    return jsonify({"Number": n, "isPrime": False})
  result = is_prime(n)
  return jsonify({"Number": n, "isPrime": result})

if __name__ == "__main__":
  app.run(port=5000)

#exercises2:
from flask import Flask, jsonify

app = Flask(__name__)

airport_database = {
    "EFHK": {"Name": "Helsinki-Vantaa Airport", "Location": "Helsinki"},
    "EFET": {"Name": "Enontekiö Airport", "Location": "Enontekiö"},
    "EFHF": {"Name": "Helsinki-Malmi Airport", "Location": "Helsinki"},
    "EFIV": {"Name": "Ivalo Airport", "Location": "Ivalo"},
    "EFJO": {"Name": "Joensuu Airport", "Location": "Joensuu"},
    "EFJY": {"Name": "Jyväskylä Airport", "Location": "Jyväskylän Maalaiskunta"}


}

@app.route('/airport/<icao_code>', methods=['GET'])
def get_airport(icao_code):
    airport = airport_database.get(icao_code)
    if airport is not None:
        return jsonify({"ICAO": icao_code, **airport})
    else:
        return jsonify({"error": "Airport not found"}), 404

if __name__ == "__main__":
    app.run(debug=True)
