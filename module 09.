#Fundamentals of object-oriented programming
#exercise3:
class Car:
    def __init__(self, regPlate, maxSpeed ):
        self.regPlate = regPlate
        self.maxSpeed = maxSpeed
        self.currentSpeed = 0
        self.odometer = 0

    def accelerate(self, change):
        self.currentSpeed += change
        if self.currentSpeed > self.maxSpeed:
            self.currentSpeed = self.maxSpeed
        elif self.currentSpeed < 0:
            self.currentSpeed = 0

    def drive(self, hours):
        distance = self.currentSpeed * hours
        self.odometer += distance


newCar = Car("ABC-313", 202) #maximum was 142 at the first exercises.
print(f"Register plate {newCar.regPlate}, Max speed {newCar.maxSpeed} Km/h, "
      f"current speed {newCar.currentSpeed} Km/h, Odometer {newCar.odometer} km")

newCar.accelerate(30)
print(f"Current speed: {newCar.currentSpeed} Km/h")
newCar.accelerate(70)
print(f"Current speed: {newCar.currentSpeed} Km/h")
newCar.accelerate(50)
print(f"Current speed: {newCar.currentSpeed} Km/h")
'''newCar.accelerate(-200)


print(f"Final speed: {newCar.currentSpeed} Km/h")'''

newCar.drive(1.5)
print(f"Odometer: {newCar.odometer} km")

#exercise4:
import random

class Car:
    def __init__(self, max_speed, reg_number):
        self.max_speed = max_speed
        self.reg_number = reg_number
        self.distance = 0
        self.speed = 0

    def accelerate(self, amount):
        self.speed += amount
        if self.speed > self.max_speed:
            self.speed = self.max_speed
        if self.speed < 0:
            self.speed = 0

    def drive(self, time):
        distance = self.speed * time / 60
        self.distance += distance

cars = []
for i in range(10):
    max_speed = random.randint(100, 200)
    reg_number = "ABC-" + str(i + 1)
    car = Car(max_speed, reg_number)
    cars.append(car)
hour = 0
winner = None
while not winner:
    hour += 1
    print(f"Hour {hour}:")
    for car in cars:
        change = random.randint(-10, 15)
        car.accelerate(change)
        car.drive(60)
        print(f"{car.reg_number}: Speed = {car.speed} km/h, Distance = {car.distance} km")
        if car.distance >= 10000:
            winner = car
            break
    print()

print("The race is over!")
print(f"The winner is {winner.reg_number} with a distance of {winner.distance} km.")
print("The final standing table is:")
cars.sort(key=lambda x: x.distance, reverse=True)
print("| Reg. Number | Max Speed | Distance |")
print("|-------------|-----------|----------|")
for car in cars:
    print(f"| {car.reg_number}       | {car.max_speed} km/h |   {car.distance} km |")
